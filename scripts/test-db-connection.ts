import connectDB from '../lib/mongodb';

async function testConnection() {
  try {
    console.log('๐ ุฌุงุฑู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช MongoDB Atlas...');
    const mongoose = await connectDB();
    
    // ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจุฅุฑุณุงู ุฃูุฑ ping
    const db = mongoose.connection.db;
    if (!db) {
      throw new Error('Database connection is not available');
    }
    const adminDb = db.admin();
    const result = await adminDb.ping();
    
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุฌุงุญ ุจูุงุนุฏุฉ ุงูุจูุงูุงุช MongoDB Atlas!');
    console.log('๐ ูุนูููุงุช ุงูุงุชุตุงู:');
    console.log(`- ุงุณู ูุงุนุฏุฉ ุงูุจูุงูุงุช: ${db.databaseName}`);
    console.log(`- ุญุงูุฉ ุงูุงุชุตุงู: ${mongoose.connection.readyState === 1 ? 'ูุชุตู' : 'ุบูุฑ ูุชุตู'}`);
    console.log(`- ูุชูุฌุฉ ุงูุงุฎุชุจุงุฑ: ${JSON.stringify(result)}`);
    
    // ุฅุบูุงู ุงูุงุชุตุงู
    await mongoose.connection.close();
    console.log('๐ ุชู ุฅุบูุงู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
    
    process.exit(0);
  } catch (error) {
    console.error('โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:', error);
    process.exit(1);
  }
}

testConnection();